import torch
import time
import os
import numpy as np
import sounddevice as sd
import soundfile as sf
import asyncio
from vtube_controller import VTubeStudioClient

# –°–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å VTube Studio. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç
# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ WebSocket –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ
# event loop, –∏–∑–±–µ–≥–∞—è –æ—à–∏–±–æ–∫ ¬´no close frame received or sent¬ª.
_event_loop = asyncio.new_event_loop()
asyncio.set_event_loop(_event_loop)

# –ü—É—Ç—å –¥–æ –º–æ–¥–µ–ª–∏ Silero TTS
MODEL_PATH = "E:/ElaineRus/models/silero/v3_1_ru.pt"
# –ò—Å–ø–æ–ª—å–∑—É–µ–º GPU, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ Silero
model = torch.package.PackageImporter(MODEL_PATH).load_pickle("tts_models", "model")
model.to(device)
# –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏
sample_rate = 24000

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç VTube Studio (—Å–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω —Ä–∞–∑)
_vts_client = VTubeStudioClient()

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ–º—Å—è –≤ VTube Studio —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç
# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –≤ –º–æ–º–µ–Ω—Ç
# –ø–µ—Ä–≤–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏. –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ authenticate() –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º
# –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Ñ–ª–∞–≥—É authenticated –≤ VTubeStudioClient.
try:
    _event_loop.run_until_complete(_vts_client.authenticate())
except Exception as _e:
    # –ï—Å–ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, VTube Studio –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞),
    # –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    # –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø–æ–∑–∂–µ –ø—Ä–∏ —Å–∏–Ω—Ç–µ–∑–µ —Ä–µ—á–∏.
    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ VTube Studio –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: {_e}")

def speak_text(text: str) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞, –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –µ–≥–æ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Ä–æ—Ç –∞–≤–∞—Ç–∞—Ä–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É WAV-—Ñ–∞–π–ª—É —Å –æ–∑–≤—É—á–∫–æ–π.
    """
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ VTube Studio (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç Allow –æ–¥–∏–Ω —Ä–∞–∑)
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ —Ä–∞–º–∫–∞—Ö –æ–±—â–µ–≥–æ —Ü–∏–∫–ª–∞ —Å–æ–±—ã—Ç–∏–π
        _event_loop.run_until_complete(_vts_client.authenticate())
    except Exception as e:
        print(f"üîå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ VTube Studio: {e}")
        return ""
    if not text.strip():
        print("‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏.")
        return ""
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ —Å –ø–æ–º–æ—â—å—é –º–æ–¥–µ–ª–∏ Silero
    start_time = time.time()
    audio = model.apply_tts(
        text,
        speaker="baya",
        sample_rate=sample_rate,
        put_accent=True,
        put_yo=True
    )
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—ã—Ö–æ–¥ –≤ numpy-–º–∞—Å—Å–∏–≤. model.apply_tts –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
    # —Ç–µ–Ω–∑–æ—Ä PyTorch, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ numpy.max –≤—ã–∑—ã–≤–∞–µ—Ç torch.max —Å
    # –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏. –ü—Ä—è–º–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç
    # –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ numpy.
    if hasattr(audio, "cpu"):
        audio = audio.detach().cpu().numpy()
    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    audio = audio / np.max(np.abs(audio))
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—É–¥–∏–æ –≤ —Ñ–∞–π–ª (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω—É–∂–µ–Ω)
    os.makedirs("output", exist_ok=True)
    out_path = f"output/silero_{int(start_time)}.wav"
    sf.write(out_path, audio, sample_rate)
    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
    sd.play(audio, sample_rate)
    duration = len(audio) / sample_rate

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π MouthOpen
    async def _lipsync(audio_array: np.ndarray, dur: float):
        chunk_dur = 0.2  # –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è 0.2 —Å (5 —Ä–∞–∑/—Å–µ–∫)
        chunk_samples = int(chunk_dur * sample_rate)
        try:
            # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã–º —Å —à–∞–≥–æ–º chunk_samples
            for i in range(0, len(audio_array), chunk_samples):
                chunk = audio_array[i:i+chunk_samples]
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ)
                if len(chunk) == 0:
                    value = 0.0
                else:
                    value = float(np.max(np.abs(chunk)))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ MouthOpen (0.0-1.0) –≤ VTube Studio
                await _vts_client.set_mouth_open(value)
                # –ñ–¥—ë–º 0.2 —Å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                await asyncio.sleep(chunk_dur)
            # –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ñ—Ä–∞–∑—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä–æ—Ç (–∑–Ω–∞—á–µ–Ω–∏–µ 0.0)
            await _vts_client.set_mouth_open(0.0)
        except Exception as e:
            print("üîå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä—Ç–∞:", e)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ü–∏–∫–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä—Ç–∞
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä—Ç–∞ –≤ —Ç–æ–º –∂–µ loop
    _event_loop.run_until_complete(_lipsync(audio, duration))
    # –û–∂–∏–¥–∞–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ
    sd.wait()
    print(f"TTS –≥–æ—Ç–æ–≤–æ –∑–∞ {time.time() - start_time:.2f} —Å–µ–∫")
    return out_path
