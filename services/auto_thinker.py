import asyncio
import random
from services.llm import generate_response, USER_NAME
from services.tts_silero import speak_text

class AutoThinker:
    def __init__(self, chat_history: list[str], silent_timeout: float = 15.0):
        self.chat_history = chat_history
        self.silent_timeout = silent_timeout
        self.last_voice_time = asyncio.get_event_loop().time()
        self.enabled = True
        self.chat_messages: list[str] = []

    def notify_voice_activity(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.last_voice_time = asyncio.get_event_loop().time()

    def push_chat(self, message: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ Twitch"""
        if message:
            self.chat_messages.append(message)
            if len(self.chat_messages) > 20:
                self.chat_messages = self.chat_messages[-20:]

    async def run(self):
        """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è –º—ã—Å–ª–∏ –≤ —Ç–∏—à–∏–Ω–µ"""
        loop = asyncio.get_event_loop()
        while self.enabled:
            await asyncio.sleep(2.0)
            now = loop.time()
            if now - self.last_voice_time < self.silent_timeout:
                continue  # –≥–æ–ª–æ—Å –Ω–µ–¥–∞–≤–Ω–æ –±—ã–ª ‚Äî –∂–¥—ë–º

            prompt = self.build_prompt()
            print("üß† –¢–∏—à–∏–Ω–∞... –î—É–º–∞—é —Å–∞–º–∞:", prompt)

            response = await loop.run_in_executor(None, generate_response, prompt, self.chat_history)
            if response.strip():
                await loop.run_in_executor(None, speak_text, response)

                # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
                entry = f"–≠–ª–µ–π–Ω-–°–∞–º–∞: {response}"
                self.chat_history.append(entry)
                if len(self.chat_history) > 6:
                    self.chat_history[:] = self.chat_history[-6:]

                # –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞, —á—Ç–æ–±—ã –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ–¥—Ä—è–¥
                self.last_voice_time = loop.time()

    def build_prompt(self) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞"""
        if self.chat_messages:
            sample = random.choice(self.chat_messages[-5:])
            return f"–í —á–∞—Ç–µ –Ω–∞–ø–∏—Å–∞–ª–∏: '{sample}'. –û—Ç–≤–µ—Ç—å –∫–∞–∫ vtuber –¥–µ–≤—É—à–∫–∞, –≤–µ—Å–µ–ª–æ."
        else:
            return "–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–∞–º–æ–π ‚Äî —à—É—Ç–∫—É, –º–Ω–µ–Ω–∏–µ –∏–ª–∏ —Ñ—Ä–∞–∑—É –∫–∞–∫ vtuber –¥–µ–≤—É—à–∫–∞."
