from twitchio.ext import commands
from llm import generate_response, USER_NAME
from tts_silero import speak_text

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Twitch
TWITCH_TOKEN = 'si14jnonj102h4rvzyuk7hyhu71vk7'
TWITCH_NICK = 'kakoitochelikhihi'  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ—á–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –≤–∞—à–µ–≥–æ Twitch-–∞–∫–∫–∞—É–Ω—Ç–∞
TWITCH_CHANNEL = 'kakoitochelikhihi'  # –∫–∞–Ω–∞–ª, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
CLIENT_ID = '9ro3fog9cavz8obw8tnuikn4u8gsed'
CLIENT_SECRET = 'ohvsovwwcecp5orjws5mk9d2hbtbcrb'

class ElaineTwitchBot(commands.Bot):

    def __init__(self):
        super().__init__(token=TWITCH_TOKEN, prefix='!', initial_channels=[TWITCH_CHANNEL])

    async def event_ready(self):
        print(f"üü£ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —á–∞—Ç—É Twitch –∫–∞–∫ {self.nick}")

    async def event_message(self, message):
        if message.echo:
            return

        author = message.author.name
        content = message.content
        print(f"{author}: {content}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏
        prompt = f"{USER_NAME}, –≤ —á–∞—Ç–µ Twitch {author} –Ω–∞–ø–∏—Å–∞–ª: {content}. –û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ."
        response = generate_response(prompt, [])

        # –û—Ç–≤–µ—á–∞–µ–º –≤ —á–∞—Ç–µ
        await message.channel.send(response)
        print(f"–≠–ª–µ–π–Ω-–°–∞–º–∞ (—á–∞—Ç): {response}")

        # –û–∑–≤—É—á–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç
        speak_text(response)

bot = ElaineTwitchBot()
bot.run()