"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏,
–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –∏ —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏. –ú–æ–¥—É–ª–∏ –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ª–∏–±–æ –≤
–ø–∞–∫–µ—Ç–µ `services`, –ª–∏–±–æ –≤ —Ç–µ–∫—É—â–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ. –î–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç–∏
–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ `services` –∏, –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º
–ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã.
"""

# –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ –ø–∞–∫–µ—Ç–∞ services. –ï—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä,
# –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞), –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
try:
    from services.stt_vad import record_vad, transcribe_vad
    from services.llm import generate_response, USER_NAME
    from services.tts_silero import speak_text
except ImportError:
    from stt_vad import record_vad, transcribe_vad  # type: ignore
    from llm import generate_response, USER_NAME  # type: ignore
    from tts_silero import speak_text  # type: ignore
from time import sleep

def main():
    last_text = None
    last_response = None
    chat_history = []
    while True:
        wav = record_vad()
        if not wav:
            continue
        user_text = transcribe_vad(wav)
        if not user_text.strip():
            print("üò∂ –ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            continue
        print(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {user_text}")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –≤–æ–ø—Ä–æ—Å (–≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ —ç—Ö–∞)
        if last_text and user_text.strip().lower().startswith(last_text.strip().lower()):
            print("üîÅ –ü–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ–≤—Ç–æ—Ä (–≤–æ–ø—Ä–æ—Å) ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é...")
            continue
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (–∏—Å—Ç–æ—Ä–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        response = generate_response(user_text, chat_history)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_text.strip()[-1] not in ".!?‚Ä¶¬ª":
            print("üü° –ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ –¥–æ–≥–æ–≤–æ—Ä–∏–ª ‚Äî –Ω–µ –¥–æ–±–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏—é.")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–≤–µ—Ä—à—ë–Ω –ª–∏ –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏
        if response.strip()[-1] not in ".!?‚Ä¶¬ª":
            print("üü° –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –∫–∞–∂–µ—Ç—Å—è –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–º.")
        # –§–∏–ª—å—Ç—Ä –Ω–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –æ—Ç–≤–µ—Ç (–≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è)
        if last_response and response.strip().lower().startswith(last_response.strip().lower()):
            print("üîÅ –ü–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ–≤—Ç–æ—Ä (–æ—Ç–≤–µ—Ç) ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ...")
            last_text = user_text
            last_response = response
            continue
        # –ü–µ—á–∞—Ç–∞–µ–º –∏ –æ–∑–≤—É—á–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç
        print(f"Elaine-–°–∞–º–∞: {response}")
        speak_text(response)
        # **–í–∞–∂–Ω–æ:** –∂–¥–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É –ø–µ—Ä–µ–¥ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è,
        # —á—Ç–æ–±—ã TTS-–≥–æ–ª–æ—Å –Ω–µ –±—ã–ª –≤–æ—Å–ø—Ä–∏–Ω—è—Ç –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º
        sleep(1.0)
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ (—Ö—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π)
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ llm
        entry = f"{USER_NAME}: {user_text}\n–≠–ª–µ–π–Ω-–°–∞–º–∞: {response}"
        if entry not in chat_history:
            chat_history.append(entry)
        if len(chat_history) > 4:
            chat_history = chat_history[-4:]
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–ø–ª–∏–∫–∏
        last_text = user_text
        last_response = response

if __name__ == "__main__":
    main()
